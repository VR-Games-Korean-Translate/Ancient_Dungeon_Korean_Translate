name: Daily Korean Translation 

on:
  workflow_dispatch:
  schedule:
    - cron: '0 15 * * *' # 매일 자정에 실행

jobs:
  fetch_data:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.WORKFLOW_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        sudo apt-get install zip
        python -m pip install --upgrade pip
        pip install gspread oauth2client

    - name: Fetch and save data
      run: python fetch_data.py
      env:
        SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}
        SHEET_URL: ${{ secrets.SHEET_URL }}
        VERSION_FILE_PATH: ${{ secrets.VERSION_FILE_PATH }}

    - name: Check for changes
      id: git-check
      run: |
        if git status --porcelain | grep "^M" &> /dev/null; then
          echo "::set-output name=changes::true"
        else
          echo "::set-output name=changes::false"
        fi

    - name: Configure Git
      if: steps.git-check.outputs.changes == 'true'
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"

    - name: Commit and push changes
      if: steps.git-check.outputs.changes == 'true'
      run: |
        git add .
        git commit -m "Update english.csv"
        git push

    - name: Set version
      run: echo "VERSION=$(date '+%Y%m%d%H%M')" >> $GITHUB_ENV

    - name: Fetch release description
      id: fetch_description
      run: |
        DESCRIPTION="번역률: $(python fetch_description.py)%0A%0A원하는 폰트 한가지를 선택해서 사용하세요.%0A%0A검은 화면의 오류가 난다면, [해당 파일](https://drive.google.com/file/d/11I2H8FL6lf80tPEb8CbydxviFt2ZaG8e/view?usp=sharing)을 같이 덮어 씌워주세요."
        echo "DESCRIPTION=$DESCRIPTION" >> $GITHUB_ENV
      env:
        SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}
        SHEET_URL: ${{ secrets.SHEET_URL }}
        
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: ${{ secrets.VERSION_FILE_PATH }}_v${{ env.VERSION }}
        body: ${{ env.DESCRIPTION }}
        draft: false
        prerelease: false


    - name: Compress dossammul directory
      run: |
        cd ${{ secrets.VERSION_FILE_PATH }}/dossammul
        zip -r ../../도스샘물-${{ env.VERSION }}.zip .

    - name: Compress galmuri9 directory
      run: |
        cd ${{ secrets.VERSION_FILE_PATH }}/galmuri9
        zip -r ../../갈무리9-${{ env.VERSION }}.zip .

    - name: Compress neodgm directory
      run: |
        cd ${{ secrets.VERSION_FILE_PATH }}/neodgm
        zip -r ../../Neo둥근모-${{ env.VERSION }}.zip .

    - name: Encode filenames
      run: |
        ENCODED_DOSSAMMUL=$(python -c "import urllib.parse; print(urllib.parse.quote('도스샘물-${{ env.VERSION }}.zip'))")
        ENCODED_GALMURI9=$(python -c "import urllib.parse; print(urllib.parse.quote('갈무리9-${{ env.VERSION }}.zip'))")
        ENCODED_NEODGM=$(python -c "import urllib.parse; print(urllib.parse.quote('Neo둥근모-${{ env.VERSION }}.zip'))")
        echo "ENCODED_DOSSAMMUL=$ENCODED_DOSSAMMUL" >> $GITHUB_ENV
        echo "ENCODED_GALMURI9=$ENCODED_GALMURI9" >> $GITHUB_ENV
        echo "ENCODED_NEODGM=$ENCODED_NEODGM" >> $GITHUB_ENV

    - name: Upload dossammul artifact to release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/도스샘물-${{ env.VERSION }}.zip
        asset_name: ${{ env.ENCODED_DOSSAMMUL }}
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}

    - name: Upload galmuri9 artifact to release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/갈무리9-${{ env.VERSION }}.zip
        asset_name: ${{ env.ENCODED_GALMURI9 }}
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}

    - name: Upload neodgm artifact to release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/Neo둥근모-${{ env.VERSION }}.zip
        asset_name: ${{ env.ENCODED_NEODGM }}
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
