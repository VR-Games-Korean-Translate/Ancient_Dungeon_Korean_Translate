name: Fetch Google Sheet Data

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # 매일 자정에 실행

jobs:
  fetch_data:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.WORKFLOW_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install gspread oauth2client

    - name: Fetch and save data
      run: python fetch_data.py
      env:
        SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}
        SHEET_URL: ${{ secrets.SHEET_URL }}
        VERSION_FILE_PATH: ${{ secrets.VERSION_FILE_PATH }}

    - name: Check for changes
      id: git-check
      run: |
        if git status --porcelain | grep "^M" &> /dev/null; then
          echo "::set-output name=changes::true"
        else
          echo "::set-output name=changes::false"
        fi

    - name: Configure Git
      if: steps.git-check.outputs.changes == 'true'
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"

    - name: Commit and push changes
      if: steps.git-check.outputs.changes == 'true'
      run: |
        git add .
        git commit -m "Update english.csv"
        git push

    - name: Set version
      run: echo "VERSION=$(date '+%Y%m%d%H%M')" >> $GITHUB_ENV
    
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: Release ${VERSION}
        draft: false
        prerelease: false
    
    - name: Compress and upload dossammul directory to release
      uses: actions/upload-artifact@v2
      with:
        name: dossammul-artifact-${{ env.VERSION }}
        path: ${{ secrets.VERSION_FILE_PATH }}/dossammul

    - name: Compress and upload galmuri9 directory to release
      uses: actions/upload-artifact@v2
      with:
        name: galmuri9-artifact-${{ env.VERSION }}
        path: ${{ secrets.VERSION_FILE_PATH }}/galmuri9

    - name: Compress and upload neodgm directory to release
      uses: actions/upload-artifact@v2
      with:
        name: neodgm-artifact-${{ env.VERSION }}
        path: ${{ secrets.VERSION_FILE_PATH }}/neodgm

    - name: Upload dossammul artifact to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/dossammul-artifact-${{ env.VERSION }}.zip
        asset_name: dossammul-artifact-${{ env.VERSION }}.zip
        asset_content_type: application/zip
    
    - name: Upload galmuri9 artifact to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/galmuri9-artifact.zip
        asset_name: galmuri9-artifact.zip
        asset_content_type: application/zip
    
    - name: Upload neodgm artifact to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/neodgm-artifact.zip
        asset_name: neodgm-artifact.zip
        asset_content_type: application/zip
